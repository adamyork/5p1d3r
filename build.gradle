import java.text.SimpleDateFormat

plugins {
    id "application"
    id "org.openjfx.javafxplugin" version "0.0.12"
    id "org.springframework.boot" version "2.7.2"
    id "io.spring.dependency-management" version "1.0.12.RELEASE"
}

group "com.github.adamyork"
version "2.3"
project.ext["buildDate"] = getDate()

static def getDate() {
    new SimpleDateFormat('yyyy-MM-dd').format(new Date())
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    implementation 'org.springframework.boot:spring-boot-starter:2.7.0'
    implementation 'org.jsoup:jsoup:1.14.3'
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.codehaus.groovy:groovy-all:3.0.11'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.13.3'
    implementation 'commons-configuration:commons-configuration:1.10'
    implementation 'org.controlsfx:controlsfx:11.1.1'
    implementation 'org.jooq:jool:0.9.14'
    implementation 'javax.inject:javax.inject:1'
    testImplementation  'junit:junit:4.13.2'
}

processResources {
    filesMatching('application.properties') {
        expand(project.properties)
    }
}

compileJava.dependsOn(processResources)

javafx {
    mainClassName = "com.github.adamyork.fx5p1d3r.Main"
    version = "17"
    modules = ["javafx.controls", "javafx.fxml"]
    //jvmArgs = ["-agentlib:jdwp=transport=dt_socket,address=8004,server=y,suspend=y"]
}

task buildWindowsInstaller(type: Exec) {
    workingDir "${projectDir}"
    commandLine "jpackage", "--type", "exe", "--dest", "${projectDir}\\build\\installer", "--input", "${projectDir}\\build\\libs", "--name", "5p1d3r", "--main-class", "org.springframework.boot.loader.JarLauncher", "--main-jar", "5p1d3r-2.2.jar", "--java-options", "-Xmx2048m", "--app-version", "${version}", "--win-dir-chooser", "--icon", "${projectDir}\\build\\resources\\main\\image\\icon32.ico"
}